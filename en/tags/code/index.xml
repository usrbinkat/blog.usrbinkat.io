<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Code on Kat Morgan</title><link>https://blog.usrbinkat.io/en/tags/code/</link><description>Recent content in Code on Kat Morgan</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 12 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.usrbinkat.io/en/tags/code/index.xml" rel="self" type="application/rss+xml"/><item><title>ðŸ”§ Golang installation and management in 2025 ðŸš€</title><link>https://blog.usrbinkat.io/en/blog/golang-mise-on-macos-and-linux/</link><pubDate>Mon, 12 May 2025 00:00:00 +0000</pubDate><guid>https://blog.usrbinkat.io/en/blog/golang-mise-on-macos-and-linux/</guid><description>&lt;p>Starting new projects can be overwhelming, especially when switching to long-forgotten or even new emerging skillsets, languages, and tools.&lt;/p>
&lt;p>In recent weeks I&amp;rsquo;ve picked up new greenfield Go projects, and I realized it has been almost 4 years since I last started a new project in this language. Given the velocity of the developer tooling ecosystem, it felt prudent to research the latest trends and best practices to re-skill with the advantage of the latest tools and techniques.&lt;/p></description></item></channel></rss>